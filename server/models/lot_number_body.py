# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class LotNumberBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, lot_number: str=None, part_number: str=None, description: str=None, quantity: int=None):  # noqa: E501
        """LotNumberBody - a model defined in Swagger

        :param lot_number: The lot_number of this LotNumberBody.  # noqa: E501
        :type lot_number: str
        :param part_number: The part_number of this LotNumberBody.  # noqa: E501
        :type part_number: str
        :param description: The description of this LotNumberBody.  # noqa: E501
        :type description: str
        :param quantity: The quantity of this LotNumberBody.  # noqa: E501
        :type quantity: int
        """
        self.swagger_types = {
            'lot_number': str,
            'part_number': str,
            'description': str,
            'quantity': int
        }

        self.attribute_map = {
            'lot_number': 'lot_number',
            'part_number': 'part_number',
            'description': 'description',
            'quantity': 'quantity'
        }
        self._lot_number = lot_number
        self._part_number = part_number
        self._description = description
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt) -> 'LotNumberBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The lot_number_body of this LotNumberBody.  # noqa: E501
        :rtype: LotNumberBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lot_number(self) -> str:
        """Gets the lot_number of this LotNumberBody.


        :return: The lot_number of this LotNumberBody.
        :rtype: str
        """
        return self._lot_number

    @lot_number.setter
    def lot_number(self, lot_number: str):
        """Sets the lot_number of this LotNumberBody.


        :param lot_number: The lot_number of this LotNumberBody.
        :type lot_number: str
        """

        self._lot_number = lot_number

    @property
    def part_number(self) -> str:
        """Gets the part_number of this LotNumberBody.


        :return: The part_number of this LotNumberBody.
        :rtype: str
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number: str):
        """Sets the part_number of this LotNumberBody.


        :param part_number: The part_number of this LotNumberBody.
        :type part_number: str
        """

        self._part_number = part_number

    @property
    def description(self) -> str:
        """Gets the description of this LotNumberBody.


        :return: The description of this LotNumberBody.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this LotNumberBody.


        :param description: The description of this LotNumberBody.
        :type description: str
        """

        self._description = description

    @property
    def quantity(self) -> int:
        """Gets the quantity of this LotNumberBody.


        :return: The quantity of this LotNumberBody.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: int):
        """Sets the quantity of this LotNumberBody.


        :param quantity: The quantity of this LotNumberBody.
        :type quantity: int
        """

        self._quantity = quantity
