# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server.models.lot_number_body import LotNumberBody  # noqa: F401,E501
from server import util


class PartNumberBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, part_number: str=None, lot_info: LotNumberBody=None):  # noqa: E501
        """PartNumberBody - a model defined in Swagger

        :param part_number: The part_number of this PartNumberBody.  # noqa: E501
        :type part_number: str
        :param lot_info: The lot_info of this PartNumberBody.  # noqa: E501
        :type lot_info: LotNumberBody
        """
        self.swagger_types = {
            'part_number': str,
            'lot_info': LotNumberBody
        }

        self.attribute_map = {
            'part_number': 'partNumber',
            'lot_info': 'lot_info'
        }
        self._part_number = part_number
        self._lot_info = lot_info

    @classmethod
    def from_dict(cls, dikt) -> 'PartNumberBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The part_number_body of this PartNumberBody.  # noqa: E501
        :rtype: PartNumberBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def part_number(self) -> str:
        """Gets the part_number of this PartNumberBody.


        :return: The part_number of this PartNumberBody.
        :rtype: str
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number: str):
        """Sets the part_number of this PartNumberBody.


        :param part_number: The part_number of this PartNumberBody.
        :type part_number: str
        """
        if part_number is None:
            raise ValueError("Invalid value for `part_number`, must not be `None`")  # noqa: E501

        self._part_number = part_number

    @property
    def lot_info(self) -> LotNumberBody:
        """Gets the lot_info of this PartNumberBody.


        :return: The lot_info of this PartNumberBody.
        :rtype: LotNumberBody
        """
        return self._lot_info

    @lot_info.setter
    def lot_info(self, lot_info: LotNumberBody):
        """Sets the lot_info of this PartNumberBody.


        :param lot_info: The lot_info of this PartNumberBody.
        :type lot_info: LotNumberBody
        """

        self._lot_info = lot_info
